(ns obj-hierarchy.format
  (:use [clojure.string :only [join]]))

(defn- format-el [idx el]
  (let [cl (if (= 0 idx)
             "* Class:"
             "* SuperClass:")
        c (first el)
        i (rest el)]
    (str cl " `" (.getName c) "`"
         (when (not (empty? i))
           (str ", interfaces: "
            (join ", " (map #(str "`" (. % getName) "`") i)))))))

(defn format-hierarchy 
  "Format in a String a class and interfaces hierarchy generated by `obj-hierarchy.core/transform`."
  [h]
  (join \newline (map-indexed format-el h)))